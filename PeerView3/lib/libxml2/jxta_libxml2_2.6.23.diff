Index: xmlstring.c
===================================================================
RCS file: /cvs/gnome/libxml2/xmlstring.c,v
retrieving revision 1.18
diff -a -u -r1.18 xmlstring.c
--- xmlstring.c	22 Dec 2005 14:58:32 -0000	1.18
+++ xmlstring.c	10 Mar 2006 01:19:16 -0000
@@ -13,14 +13,19 @@
  * daniel@veillard.com
  */
 
+#define JXTA_WILDCARD
 #define IN_LIBXML
 #include "libxml.h"
 
 #include <stdlib.h>
 #include <string.h>
+#ifdef HAVE_CTYPE_H
+#include <ctype.h>
+#endif
 #include <libxml/xmlmemory.h>
 #include <libxml/parserInternals.h>
 #include <libxml/xmlstring.h>
+#define JXTA_WILDCARD
 
 /************************************************************************
  *                                                                      *
@@ -142,6 +147,52 @@
     return 0;
 }
 
+#ifdef JXTA_WILDCARD
+/**
+* Add a wild card search for string comparisons
+* Wild card supported is of patterns
+*         * - all strings match
+*         *abc - ends with abc
+*         abc* - starts with abc
+*         a?c - contains any character between a and c
+ */
+int
+xmlStrEqualWc(const xmlChar * pattern, const xmlChar * str) {
+    int sl;
+    int skip = 0;
+
+    if (pattern == str) return(1);
+    if (pattern == NULL) return(0);
+    if (str == NULL) return(0);
+     do {
+       switch (*pattern) {
+           case '*':
+	       for (;*pattern;) { 
+	           pattern++;
+		   if (*pattern == '\0') return(1);
+		   sl = strlen((const char *)str);
+		   for (; *str != '\0'; ) {
+	               if (xmlStrEqualWc(pattern,str++)) return (1); 
+		   }
+	           return (0);
+	       }
+	       break;
+	   case '?':
+	       pattern++;
+	       str++;
+	       skip = 1;
+	       break;
+       }
+       if (!skip) {
+           if (toupper(*pattern++) != toupper(*str++)) return (0);
+       }
+       skip = 0;
+    } while (*str) ;
+    if (*pattern != '\0' && *pattern != '*') return (0);
+    return (1);
+}
+#endif
+
 /**
  * xmlStrEqual:
  * @str1:  the first xmlChar *
@@ -205,6 +256,10 @@
 int
 xmlStrncmp(const xmlChar *str1, const xmlChar *str2, int len) {
     register int tmp;
+
+    if (*str1 == '*' || *str2 == '*') {
+    	printf("strncompare:%s :: %s \n", str1, str2); 
+    }
 
     if (len <= 0) return(0);
     if (str1 == str2) return(0);
Index: xpath.c
===================================================================
RCS file: /cvs/gnome/libxml2/xpath.c,v
retrieving revision 1.299
diff -a -u -r1.299 xpath.c
--- xpath.c	5 Jan 2006 12:30:42 -0000	1.299
+++ xpath.c	10 Mar 2006 01:19:16 -0000
@@ -14,6 +14,8 @@
  *
  */
 
+#define JXTA_WILDCARD
+
 #define IN_LIBXML
 #include "libxml.h"
 
@@ -4518,14 +4520,25 @@
         return (0);
     hash = xmlXPathStringHash(str);
     for (i = 0; i < ns->nodeNr; i++) {
+    
+#ifndef JXTA_WILDCARD
         if (xmlXPathNodeValHash(ns->nodeTab[i]) == hash) {
             str2 = xmlNodeGetContent(ns->nodeTab[i]);
             if ((str2 != NULL) && (xmlStrEqual(str, str2))) {
+#else
+        if (1) {
+            str2 = xmlNodeGetContent(ns->nodeTab[i]); 
+            if ((str2 != NULL) && (xmlStrEqualWc(str, str2))) { 
+#endif
                 xmlFree(str2);
 		if (neq)
 		    continue;
                 return (1);
+#ifndef JXTA_WILDCARD
 	    } else if ((str2 == NULL) && (xmlStrEqual(str, BAD_CAST ""))) {
+#else
+	    } else if ((str2 == NULL) && (xmlStrEqualWc(str, BAD_CAST ""))) { 
+#endif
 		if (neq)
 		    continue;
                 return (1);
